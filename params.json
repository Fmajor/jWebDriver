{"name":"jWebDriver","tagline":"A webdriver client for Node.js","body":"jWebDriver\r\n================\r\n\r\n![jWebDriver logo](https://raw.github.com/yaniswang/jWebDriver/master/logo.png)\r\n\r\nA webdriver client for Node.js\r\n\r\n[![Build Status](https://img.shields.io/travis/yaniswang/jWebDriver.svg)](https://travis-ci.org/yaniswang/jWebDriver)\r\n[![NPM version](https://img.shields.io/npm/v/jwebdriver.svg?style=flat)](https://www.npmjs.com/package/jwebdriver)\r\n[![License](https://img.shields.io/npm/l/jwebdriver.svg?style=flat)](https://www.npmjs.com/package/jwebdriver)\r\n[![NPM count](https://img.shields.io/npm/dm/jwebdriver.svg?style=flat)](https://www.npmjs.com/package/jwebdriver)\r\n[![NPM count](https://img.shields.io/npm/dt/jwebdriver.svg?style=flat)](https://www.npmjs.com/package/jwebdriver)\r\n\r\nOfficial Site: [http://jwebdriver.com/](http://jwebdriver.com/)\r\n\r\nCoverage: [86.76%](http://jwebdriver.com/coverage/)\r\n\r\nFeatures\r\n================\r\n\r\n1. Support all webdriver protocols: [https://code.google.com/p/selenium/wiki/JsonWireProtocol](https://code.google.com/p/selenium/wiki/JsonWireProtocol)\r\n2. Easy to use\r\n3. Support promise chain & generator & es7 await\r\n4. jQuery style test code, easy use for front engineer\r\n5. All test cover api\r\n6. Support hosts mode, different hosts for different job\r\n7. Support for remote file upload\r\n\r\nQuick start\r\n================\r\n\r\n1.  Download Selenium server & browser driver.\r\n\r\n    > Selenium server & IEDriverServer & SafariDriver: [http://selenium-release.storage.googleapis.com/index.html](http://selenium-release.storage.googleapis.com/index.html)\r\n\r\n    > ChromeDriver: [http://chromedriver.storage.googleapis.com/index.html](http://chromedriver.storage.googleapis.com/index.html)\r\n\r\n2. Run selenium server\r\n\r\n\t> java -jar selenium-server-standalone-2.26.0.jar\r\n\r\n3. Insall jWebDriver\r\n\r\n    > npm install jwebdriver\r\n\r\n4. Run test code\r\n\r\n    > node baidu.js\r\n\r\n        var JWebDriver = require('jwebdriver');\r\n\r\n        var driver = new JWebDriver();\r\n        driver.session('chrome', function*(error, chrome){\r\n            yield chrome.url('https://www.baidu.com/');\r\n            var elemement = yield chrome.find('#kw');\r\n            yield elemement.setValue('mp3').submit();\r\n\r\n            console.log(yield chrome.title());\r\n\r\n            yield chrome.close();\r\n        }).then(function(){\r\n            console.log('all done');\r\n        }).catch(function(error){\r\n            console.log(error);\r\n        });\r\n\r\n    > node mocha.js\r\n\r\n        var JWebDriver = require('jwebdriver');\r\n        var expect  = require(\"expect.js\");\r\n        require('mocha-generators').install();\r\n\r\n        describe('jWebDriver test', function(){\r\n\r\n            var browser;\r\n            before(function*(){\r\n                var driver = new JWebDriver();\r\n                browser = yield driver.session('chrome');\r\n            });\r\n\r\n            it('should open url', function*(){\r\n                yield browser.url('https://www.baidu.com/');\r\n                var kw = yield browser.find('#kw');\r\n                expect(kw.length).to.be(1);\r\n\r\n                yield kw.setValue('mp3').submit();\r\n\r\n                var url = yield browser.url();\r\n                expect(url).to.contain('wd=mp3');\r\n            });\r\n\r\n            after(function*(){\r\n                yield browser.close();\r\n            });\r\n\r\n        });\r\n\r\n    > node promise.js\r\n\r\n        var JWebDriver = require('jwebdriver');\r\n\r\n        var driver = new JWebDriver();\r\n        driver.session('chrome', function(error, chrome) {\r\n            chrome.url('https://www.baidu.com/')\r\n                  .find('#kw')\r\n                  .then(function(kw) {\r\n                      return kw.setValue('mp3')\r\n                               .submit();\r\n                  })\r\n                  .title()\r\n                  .then(function(title) {\r\n                      console.log(title);\r\n                  })\r\n                  .close();\r\n        });\r\n\r\n\r\nMore examples\r\n================\r\n\r\n1. [Baidu test](https://github.com/yaniswang/jWebDriver/blob/master/example/baidu.js)\r\n2. [Gooogle test](https://github.com/yaniswang/jWebDriver/blob/master/example/google.js)\r\n3. [Mocha test](https://github.com/yaniswang/jWebDriver/blob/master/example/mocha.js)\r\n4. [Promise test](https://github.com/yaniswang/jWebDriver/blob/master/example/promise.js)\r\n5. [Upload test](https://github.com/yaniswang/jWebDriver/blob/master/example/upload.js)\r\n6. [Drag Drop test](https://github.com/yaniswang/jWebDriver/blob/master/example/dragdrop.js)\r\n7. [Co test](https://github.com/yaniswang/jWebDriver/blob/master/example/co.js)\r\n8. [ES7 async](https://github.com/yaniswang/jWebDriver/blob/master/example/es7async.js)\r\n\r\nAPI Book\r\n================\r\n\r\njWebDriver have 3 Class: Driver, Broswer, Elemenets\r\n\r\nAll api can used with chain promise and support generator & es7 async:\r\n\r\n    browser.find('#kw').then(function(elements){\r\n        return elements.setValue('test')\r\n                       .submit();\r\n    })\r\n    .title()\r\n    .then(function(title){\r\n        console.log(title);\r\n    });\r\n\r\n\r\nYou can search all api here, include all mode of api:\r\n\r\n    var co = require('co');\r\n\r\n    co(function*(){\r\n\r\n        // ========================== driver api ==========================\r\n\r\n        var JWebDriver = require('jwebdriver');\r\n\r\n        var driver = new JWebDriver(); // connect to http://127.0.0.1:4444\r\n        var driver = new JWebDriver('127.0.0.1', '4444'); // connect to http://127.0.0.1:4444\r\n        var driver = new JWebDriver({\r\n            'host': '127.0.0.1',\r\n            'port': 4444,\r\n            'logLevel': 0, // 0: no log, 1: warning & error, 2: all log\r\n            'nocolor': false,\r\n            'speed': 100 // default: 0 ms\r\n        });\r\n        var wdInfo = yield driver.info(); // get webdriver server info\r\n\r\n        // ========================== session api ==========================\r\n\r\n        var arrSessions = yield driver.sessions(); // get all sessions\r\n        for(var i=0;i<arrSessions.length;i++){\r\n            yield arrSessions[i].close();\r\n        }\r\n        // new session\r\n        var chrome = yield driver.session('chrome', '40.0', 'windows');\r\n        var chrome = yield driver.session({\r\n            'browserName':'chrome'\r\n        });\r\n        // set proxy\r\n        var chrome = yield driver.session({\r\n            'browserName':'chrome',\r\n            'proxy': {\r\n                'proxyType': 'manual',\r\n                'httpProxy': '192.168.1.1:1080',\r\n                'sslProxy': '192.168.1.1:1080'\r\n            }\r\n        });\r\n        // set hosts\r\n        var chrome = yield driver.session({\r\n            'browserName':'chrome',\r\n            'hosts': '192.168.1.1 www.alibaba.com\\r\\n192.168.1.1 www.google.com'\r\n        });\r\n        // attach session\r\n        var chrome = yield driver.session('xxxxxxxxxx'); // session id\r\n\r\n        // get session info\r\n        var capabilities = yield chrome.info(); // get capabilities\r\n        var isSupported = yield chrome.support('javascript'); // get capability supported: javascript, cssselector, screenshot, storage, alert, database, rotatable\r\n        yield chrome.config({\r\n            pageloadTimeout: 5000, // page onload timeout\r\n            scriptTimeout: 1000, // sync script timeout\r\n            asyncScriptTimeout: 1000, // async script timeout\r\n            implicitTimeout: 1000 // implicit timeout\r\n        });\r\n        yield chrome.close(); // close session\r\n        yield chrome.sleep(1000); // sleep\r\n\r\n        // ========================== window ==========================\r\n\r\n        var curWindowHandle = yield chrome.windowHandle(); // get current window handle\r\n        var arrWindowHandles = yield chrome.windowHandles(); // get all windows\r\n        yield chrome.switchWindow('handleid'); // focus to window\r\n        yield chrome.switchWindow(0); // focus to first window\r\n        yield chrome.switchWindow(1); // focus to second window\r\n        var newWindowHandle = yield chrome.newWindow('http://www.alibaba.com/', 'testwindow', 'width=200,height=200'); // open new window and return windowHandle\r\n        yield chrome.closeWindow(); // close current window\r\n\r\n        // ========================== frame ==========================\r\n\r\n        var elements = yield chrome.frames(); // get all frames\r\n        yield chrome.switchFrame(0); // focus to frame 0\r\n        yield chrome.switchFrame(1); // focus to frame 1\r\n        yield chrome.switchFrame('#iframe_id'); // focus to frame #iframe_id\r\n        yield chrome.switchFrame(null); // focus to main page\r\n        yield chrome.switchFrameParent(); // focus to parent context\r\n\r\n        // ========================== position & size & maximize & screenshot ==========================\r\n\r\n        var offset = yield chrome.offset(); // return {x: 1, y: 1}\r\n        yield chrome.offset(10, 10); // set offset\r\n        yield chrome.offset({\r\n            x: 10,\r\n            y: 10\r\n        });\r\n        var info = yield chrome.size(); // return {width: 100, height: 100}\r\n        yield chrome.size(100, 100); // set size\r\n        yield chrome.size({\r\n            width: 100,\r\n            height: 100\r\n        });\r\n        yield chrome.maximize();\r\n        var png_base64  = yield chrome.getScreenshot();// get the screen shot, base64 type\r\n\r\n        // ========================== url & title & html ==========================\r\n\r\n        yield chrome.url('http://www.alibaba.com/'); // goto url\r\n        var url = yield chrome.url(); // get url\r\n        var title = yield chrome.title(); // get title\r\n        var html = yield chrome.html(); // get html code\r\n\r\n        // ========================== navigator ==========================\r\n\r\n        yield chrome.refresh(); // refresh page\r\n        yield chrome.back(); // back to previous page\r\n        yield chrome.forward(); // forward to next page\r\n\r\n        yield chrome.scrollTo('#id'); // scroll to element (first element)\r\n        yield chrome.scrollTo('#id', 10, 10); // scroll to element (first element)\r\n        yield chrome.scrollTo('#id', { // scroll to element (first element)\r\n            x: 10,\r\n            y: 10\r\n        });\r\n        yield chrome.scrollTo(10, 10);\r\n        yield chrome.scrollTo({\r\n            x: 10,\r\n            y: 10\r\n        });\r\n\r\n        // ========================== cookie ==========================\r\n\r\n        var value = yield chrome.cookie('test'); // get cookie\r\n        yield chrome.cookie('test', '123'); // set cookie\r\n        yield chrome.cookie('test', '123', { // https://code.google.com/p/selenium/wiki/JsonWireProtocol#Cookie_JSON_Object\r\n            path: '',\r\n            domain: '',\r\n            secure: '',\r\n            httpOnly: '',\r\n            expiry: ''\r\n        });\r\n        yield chrome.cookie('test',123, {\r\n            expiry: '7 day' // second|minute|hour|day|month|year\r\n        });\r\n        yield chrome.removeCookie('test'); // delete cookie\r\n        var mapCookies = yield chrome.cookies(); // get all cookie\r\n        yield chrome.clearCookies(); // delete all cookies\r\n\r\n        // ========================== local storage && session storage ==========================\r\n\r\n        var arrKeys = yield chrome.localStorageKeys(); // get all local storage keys\r\n        var value = yield chrome.localStorage('test'); // get local storage value\r\n        yield chrome.localStorage('test', '1'); // set local storage value\r\n        yield chrome.removeLocalStorage('test'); // delete local storage\r\n        yield chrome.clearLocalStorages(); // clear all local sotrage\r\n\r\n        var arrKeys = yield chrome.sessionStorageKeys(); // get all session storage keys\r\n        var value = yield chrome.sessionStorage('test'); // get session storage value\r\n        yield chrome.sessionStorage('test', '1'); // set session storage value\r\n        yield chrome.removeSessionStorage('test'); // delete session storage\r\n        yield chrome.clearSessionStorages(); // clear all session sotrage\r\n\r\n        // ========================== alert, confirm, prompt ==========================\r\n\r\n        var msg = yield chrome.getAlert();// get alert text\r\n        if(msg !== null){\r\n            yield chrome.setAlert('test');// set msg to prompt\r\n            yield chrome.acceptAlert(); // accept alert\r\n            yield chrome.dismissAlert(); // dismiss alert\r\n        }\r\n\r\n        // ========================== mouse ==========================\r\n\r\n        var MouseButtons = chrome.MouseButtons;\r\n        yield chrome.mouseMove(element); // move to center of element\r\n        yield chrome.mouseMove('#id'); // move to center of element\r\n        yield chrome.mouseMove('#id', 10, 10); // move to offset of the element\r\n        yield chrome.mouseMove('#id', {x: 10, y: 10}); // move to offset of the element\r\n        yield chrome.mouseDown(); // left mouse button down\r\n        yield chrome.mouseDown(MouseButtons.RIGHT); // right mouse button down\r\n        yield chrome.mouseDown('RIGHT'); // right mouse button down\r\n        yield chrome.mouseUp(); // left mouse button up\r\n        yield chrome.mouseUp(MouseButtons.RIGHT); // right mouse button up\r\n        yield chrome.mouseUp('RIGHT'); // right mouse button up\r\n        yield chrome.click();\r\n        yield chrome.click(MouseButtons.RIGHT);\r\n        yield chrome.click('RIGHT');\r\n        yield chrome.dblClick();\r\n        yield chrome.dragDrop('#a', '#b'); // drag a drop to b\r\n        yield chrome.dragDrop({\r\n            selector: '#a',\r\n            x: 1,\r\n            y: 1\r\n        }, {\r\n            selector: '#b',\r\n            x: 2,\r\n            y: 2\r\n        });\r\n\r\n        // ========================== keyboard ==========================\r\n\r\n        yield chrome.sendKeys('abc');\r\n        var Keys = chrome.Keys;\r\n        yield chrome.keyDown(Keys.CTRL);\r\n        yield chrome.keyDown('CTRL');\r\n        yield chrome.sendKeys('a'+Keys.LEFT);\r\n        yield chrome.keyUp(Keys.CTRL);\r\n        yield chrome.keyUp('CTRL');\r\n        yield chrome.sendKeys('{CTRL}a{CTRL}');\r\n\r\n        // ========================== eval ==========================\r\n\r\n        // sync eval\r\n        var title = yield chrome.eval(function(){\r\n            return document.title;\r\n        });\r\n        var value = yield chrome.eval(function(arg1, arg2){\r\n            return arg1;\r\n        }, 1, 2);\r\n        var value = yield chrome.eval(function(arg1, arg2){\r\n            return arg1;\r\n        }, [1, 2]);\r\n        // async eval\r\n        var value = yield chrome.eval(function(arg1, arg2, done){\r\n            setTimeout(function(){\r\n                done(arg2);\r\n            }, 2000);\r\n        }, 1, 2);\r\n        // pass element to eval\r\n        var tagName = yield chrome.eval(function(element){\r\n            return element.tagName;\r\n        }, yield chrome.find('#id'));\r\n\r\n        // ========================== element ==========================\r\n\r\n        var elements = yield chrome.wait('#id');// wait for element\r\n        if(elements.length === 1){\r\n            console.log('#id displayed');\r\n        }\r\n        yield elements.sleep(300); // sleep ms\r\n        var elements = yield chrome.wait('#id', 5000);// wait for element, 5000 ms timeout\r\n        var elements = yield chrome.wait('#id', {\r\n            timeout: 10000, // set timeout, default: 10000\r\n            displayed: true, // wait for element displayed, default: true\r\n            removed: false // wait for element removed, default: false\r\n        });\r\n\r\n        var elements = yield chrome.find('#id'); // find element\r\n        var elements = yield chrome.find('active');// get active element\r\n        var elements = yield chrome.find('#id');// get element by css selector\r\n        var elements = yield chrome.find('//html/body');// get element by xpath\r\n        var elements = yield elements.find('.class'); // find all child element\r\n        var isEqual = yield elements.equal('#bbb a'); // test if two elements refer to the same DOM element.\r\n\r\n        var len = elements.length;\r\n        for(var i=0;i<len;i++){\r\n            element = elements.get(i);\r\n        }\r\n\r\n        var tagName = yield element.tagName(); // get tagname (first element)\r\n        var value = yield element.attr('id'); // get attr value (first element)\r\n        var value = yield element.css('border'); // get css value (first element)\r\n        yield element.clear(); // clear input & textarea value\r\n        var text = yield element.text(); // get displayed text (first element)\r\n\r\n        var offset = yield element.offset(); // get offset from left top corner of the page (first element)\r\n        var offset = yield element.offset(true); // get offset from left top corner of the screen (first element)\r\n        var size = yield element.size(); // return {width: 100, height: 100} (first element)\r\n        var isDisplayed = yield element.displayed(); // determine if an element is currently displayed (first element)\r\n        var isEnabled = yield element.enabled(); //is element enabled (first element)\r\n        var isSelected = yield element.selected(); // is element selected (first element)\r\n\r\n        yield element.sendKeys('abc'); // send keys to element\r\n        var Keys = chrome.Keys;\r\n        yield element.sendKeys('a'+Keys.LEFT);\r\n        yield element.sendKeys('{CTRL}a{CTRL}');\r\n        yield element.setValue('mp3'); // equal to: element.clear().sendKeys('mp3');\r\n\r\n        yield element.click(); // click element\r\n        yield element.dblClick(); // dblClick element\r\n        yield element.dragDropTo('#id'); // dragDrop to element (first element)\r\n        yield element.dragDropTo('#id', 10, 10); // dragDrop to element (first element)\r\n        yield element.dragDropTo({\r\n            selector: '#id',\r\n            x: 10,\r\n            y: 10\r\n        }); // dragDrop to element (first element)\r\n\r\n        yield fileElement.uploadFile('c:/test.jpg');// upload file to browser machine and set temp path to <input type=\"file\">\r\n        yield element.submit();// submit form\r\n\r\n        // ========================== mobile ==========================\r\n\r\n        yield chrome.touchClick('#id');\r\n        yield chrome.touchDblClick('#id');\r\n        yield chrome.touchLongClick('#id');\r\n        yield chrome.touchDown(10, 10);\r\n        yield chrome.touchDown({\r\n            x: 10,\r\n            y: 10\r\n        });\r\n        yield chrome.touchUp(10, 10);\r\n        yield chrome.touchUp({\r\n            x: 10,\r\n            y: 10\r\n        });\r\n        yield chrome.touchMove(10, 10);\r\n        yield chrome.touchMove({\r\n            x: 10,\r\n            y: 10\r\n        });\r\n        yield chrome.touchScroll('#id');\r\n        yield chrome.touchScroll('#id', 10, 10);\r\n        yield chrome.touchScroll('#id', {\r\n            x: 10,\r\n            y: 10\r\n        });\r\n        yield chrome.touchScroll(10, 10);\r\n        yield chrome.touchScroll({\r\n            x: 10,\r\n            y: 10\r\n        });\r\n        yield chrome.touchFlick('#id', {\r\n            x: 10,\r\n            y: 10,\r\n            speed: 5\r\n        });\r\n        yield chrome.touchFlick({\r\n            xspeed: 5,\r\n            yspeed: 0\r\n        });\r\n        var orientation = yield chrome.orientation(); // return LANDSCAPE|PORTRAIT\r\n        yield chrome.orientation('LANDSCAPE'); // set orientation: LANDSCAPE|PORTRAIT\r\n\r\n        // ========================== geo location ==========================\r\n\r\n        var loc = yield chrome.geolocation(); // return {latitude: number, longitude: number, altitude: number}\r\n        yield chrome.geolocation({// set location\r\n            latitude: 1,\r\n            longitude: 1,\r\n            altitude: 1\r\n        });\r\n\r\n    }).then(function(){\r\n        console.log('All done!')\r\n    }).catch(function(error){\r\n        console.log(error);\r\n    });\r\n\r\nAPI Doc: [http://jwebdriver.com/api/](http://jwebdriver.com/api/)\r\n\r\nLicense\r\n================\r\n\r\njWebDriver is released under the MIT license:\r\n\r\n> The MIT License\r\n>\r\n> Copyright (c) 2014-2015 Yanis Wang \\<yanis.wang@gmail.com\\>\r\n>\r\n> Permission is hereby granted, free of charge, to any person obtaining a copy\r\n> of this software and associated documentation files (the \"Software\"), to deal\r\n> in the Software without restriction, including without limitation the rights\r\n> to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n> copies of the Software, and to permit persons to whom the Software is\r\n> furnished to do so, subject to the following conditions:\r\n>\r\n> The above copyright notice and this permission notice shall be included in\r\n> all copies or substantial portions of the Software.\r\n>\r\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n> IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n> FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n> AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n> LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n> OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n> THE SOFTWARE.\r\n\r\nThanks\r\n================\r\n\r\n* Selenium: [http://code.google.com/p/selenium/](http://code.google.com/p/selenium/)\r\n* xtend: [https://npmjs.org/package/xtend](https://npmjs.org/package/xtend)\r\n* mocha: [https://npmjs.org/package/mocha](https://npmjs.org/package/mocha)\r\n* expect.js: [https://github.com/LearnBoost/expect.js](https://github.com/LearnBoost/expect.js)\r\n* istanbul: [https://github.com/gotwarlost/istanbul](https://github.com/gotwarlost/istanbul)\r\n* Grunt: [http://gruntjs.com/](http://gruntjs.com/)\r\n* JSHint: [https://github.com/jshint/jshint](https://github.com/jshint/jshint)\r\n* node-zip: [https://github.com/daraosn/node-zip](https://github.com/daraosn/node-zip)\r\n* Express: [https://github.com/strongloop/express](https://github.com/strongloop/express)\r\n* request: [https://github.com/request/request](https://github.com/request/request)\r\n* co: [https://github.com/tj/co](https://github.com/tj/co)\r\n* PhantomJs: [https://github.com/Medium/phantomjs](https://github.com/Medium/phantomjs)\r\n* GitHub: [https://github.com/](https://github.com/)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}